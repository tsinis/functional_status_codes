include: package:lints/recommended.yaml

analyzer:
  exclude:
    # Web
    - "web/**"
    # Build
    - "build/**"
    # Generated code
    # - "lib/**/*.g.dart"
    # Assets
    - "assets/**"
    # Mocks for test
    - "**/*.mocks.dart"
    # Coverage
    - "test/.test_coverage.dart"

  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

  errors:
    # Info
    always_declare_return_types: info
    directives_ordering: info
    todo: info
    unsafe_html: info

    # Warning
    empty_catches: warning
    prefer_relative_imports: warning

    # Error
    always_require_non_null_named_parameters: error
    avoid_relative_lib_imports: error
    avoid_slow_async_io: error
    avoid_types_as_parameter_names: error
    cancel_subscriptions: error
    close_sinks: error
    valid_regexps: error

  plugins:
    - dart_code_metrics

dart_code_metrics:
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics:
    cyclomatic-complexity: 24
    maximum-nesting-level: 5
    number-of-parameters: 4
    source-lines-of-code: 60
  metrics-exclude:
    - test/**
  rules:
    - avoid-nested-conditional-expressions:
      acceptable-level: 2
    - prefer-correct-identifier-length:
        exceptions: ["i", "x", "sb"] # i for index, x for math operations, sb for StringBuffer.
    - avoid-top-level-members-in-tests:
        exclude:
          - test/data/*.dart
          - test/data/**/*.dart
          - test/**/data.dart
          - lib/**
    - missing-test-assertion:
        include-assertions:
          - verify
          - verifyZeroInteractions
    - avoid-passing-async-when-sync-expected:
        exclude:
          - test/**
    - avoid-redundant-async:
        exclude:
          - test/**
    - prefer-static-class:
        exclude:
          - test/**
          - lib/**/constants.dart

    - arguments-ordering: true
    - avoid-banned-imports: true
    - avoid-cascade-after-if-null: true
    - avoid-collection-methods-with-unrelated-types: true
    - avoid-double-slash-imports: true
    - avoid-duplicate-exports: true
    - avoid-dynamic: true
    - avoid-global-state: true
    - avoid-missing-enum-constant-in-map: true
    - avoid-non-ascii-symbols: true
    - avoid-non-null-assertion: true
    - avoid-substring: true
    - avoid-throw-in-catch-block: true
    - avoid-unnecessary-conditionals: true
    - avoid-unnecessary-type-assertions: true
    - avoid-unnecessary-type-casts: true
    - avoid-unrelated-type-assertions: true
    - avoid-unused-parameters: true
    - ban-name: true
    - binary-expression-operand-order: true
    - double-literal-format: true
    - format-comment: true
    - list-all-equatable-fields: true
    - member-ordering: true
    - newline-before-return: true
    - no-boolean-literal-compare: true
    - no-empty-block: true
    - no-equal-then-else: true
    - no-object-declaration: true
    - prefer-async-await: true
    - prefer-commenting-analyzer-ignores: true
    - prefer-conditional-expressions: true
    - prefer-correct-test-file-name: true
    - prefer-correct-type-name: true
    - prefer-enums-by-name: true
    - prefer-first: true
    - prefer-immediate-return: true
    - prefer-iterable-of: true
    - prefer-last: true
    - prefer-match-file-name: true
    - prefer-moving-to-variable: true
    - prefer-trailing-comma: true
    - tag-name: true

    # Disabled (Flutter or Intl related):
    - always-remove-listener: false
    - avoid-border-all: false
    - avoid-expanded-as-spacer: false
    - avoid-returning-widgets: false
    - avoid-shrink-wrap-in-lists: false
    - avoid-unnecessary-setstate: false
    - avoid-wrapping-in-padding: false
    - check-for-equals-in-render-object-setters: false
    - consistent-update-render-object: false
    - prefer-const-border-radius: false
    - prefer-correct-edge-insets-constructor: false
    - prefer-extracting-callbacks: false
    - prefer-intl-name: false
    - prefer-single-widget-per-file: false
    - prefer-using-list-view: false
    - provide-correct-intl-args: false
    - use-setstate-synchronously: false

linter:
  rules:
    # Disabled:
    always_specify_types: false # Conflicts with: omit_local_variable_types.
    always_use_package_imports: false # Conflicts with: prefer_relative_imports.
    prefer_double_quotes: false # Conflicts with: prefer_single_quotes.
    prefer_final_parameters: false # Conflicts with: avoid_final_parameters.
    unnecessary_final: false # Conflicts with: prefer_final_locals.
    # Flutter related:
    avoid_unnecessary_containers: false
    avoid_web_libraries_in_flutter: false
    flutter_style_todos: false # For Flutter Team only.
    no_logic_in_create_state: false
    sized_box_for_whitespace: false
    sized_box_shrink_expand: false
    sort_child_properties_last: false
    use_build_context_synchronously: false
    use_decorated_box: false
    use_full_hex_values_for_flutter_colors: false
    use_key_in_widget_constructors: false

    # Enabled:
    always_declare_return_types: true
    always_put_required_named_parameters_first: true
    always_require_non_null_named_parameters: true
    annotate_overrides: true
    avoid_annotating_with_dynamic: true
    avoid_bool_literals_in_conditional_expressions: true
    avoid_catching_errors: true
    avoid_double_and_int_checks: true
    avoid_dynamic_calls: true
    avoid_empty_else: true
    avoid_escaping_inner_quotes: true
    avoid_field_initializers_in_const_classes: true
    avoid_final_parameters: true
    avoid_function_literals_in_foreach_calls: true
    avoid_implementing_value_types: true
    avoid_init_to_null: true
    avoid_js_rounded_ints: true
    avoid_multiple_declarations_per_line: true
    avoid_null_checks_in_equality_operators: true
    avoid_positional_boolean_parameters: true
    avoid_print: true
    avoid_private_typedef_functions: true
    avoid_redundant_argument_values: true
    avoid_relative_lib_imports: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    avoid_returning_null: true
    avoid_returning_null_for_future: true
    avoid_returning_null_for_void: true
    avoid_returning_this: true
    avoid_setters_without_getters: true
    avoid_shadowing_type_parameters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    avoid_types_as_parameter_names: true
    avoid_types_on_closure_parameters: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    await_only_futures: true
    camel_case_extensions: true
    camel_case_types: true
    cancel_subscriptions: true
    cascade_invocations: true
    cast_nullable_to_non_nullable: true
    close_sinks: true
    collection_methods_unrelated_type: true
    combinators_ordering: true
    comment_references: true
    conditional_uri_does_not_exist: true
    constant_identifier_names: true
    control_flow_in_finally: true
    curly_braces_in_flow_control_structures: true
    dangling_library_doc_comments: true
    depend_on_referenced_packages: true
    deprecated_consistency: true
    deprecated_member_use_from_same_package: true
    diagnostic_describe_all_properties: true
    directives_ordering: true
    discarded_futures: true
    do_not_use_environment: true
    empty_catches: true
    empty_constructor_bodies: true
    empty_statements: true
    enable_null_safety: true
    eol_at_end_of_file: true
    exhaustive_cases: true
    file_names: true
    hash_and_equals: true
    implementation_imports: true
    implicit_call_tearoffs: true
    implicit_reopen: true
    invalid_case_patterns: true
    join_return_with_assignment: true
    leading_newlines_in_multiline_strings: true
    library_annotations: true
    library_names: true
    library_prefixes: true
    library_private_types_in_public_api: true
    lines_longer_than_80_chars: true
    literal_only_boolean_expressions: true
    matching_super_parameters: true
    missing_whitespace_between_adjacent_strings: true
    no_adjacent_strings_in_list: true
    no_default_cases: true
    no_duplicate_case_values: true
    no_leading_underscores_for_library_prefixes: true
    no_leading_underscores_for_local_identifiers: true
    no_literal_bool_comparisons: true
    no_runtimeType_toString: true
    no_self_assignments: true
    no_wildcard_variable_uses: true
    non_constant_identifier_names: true
    noop_primitive_operations: true
    null_check_on_nullable_type_parameter: true
    null_closures: true
    omit_local_variable_types: true
    one_member_abstracts: true
    only_throw_errors: true
    overridden_fields: true
    package_api_docs: true
    package_names: true
    package_prefixed_library_names: true
    parameter_assignments: true
    prefer_adjacent_string_concatenation: true
    prefer_asserts_in_initializer_lists: true
    prefer_asserts_with_message: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    prefer_constructors_over_static_methods: true
    prefer_contains: true
    prefer_single_quotes: true
    prefer_expression_function_bodies: true
    prefer_final_fields: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_foreach: true
    prefer_function_declarations_over_variables: true
    prefer_generic_function_type_aliases: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_if_null_operators: true
    prefer_initializing_formals: true
    prefer_inlined_adds: true
    prefer_int_literals: true
    prefer_interpolation_to_compose_strings: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_iterable_whereType: true
    prefer_mixin: true
    prefer_null_aware_method_calls: true
    prefer_null_aware_operators: true
    prefer_relative_imports: true
    prefer_spread_collections: true
    prefer_typing_uninitialized_variables: true
    prefer_void_to_null: true
    provide_deprecation_message: true
    public_member_api_docs: true
    recursive_getters: true
    require_trailing_commas: true
    secure_pubspec_urls: true
    slash_for_doc_comments: true
    sort_constructors_first: true
    sort_pub_dependencies: true
    sort_unnamed_constructors_first: true
    test_types_in_equals: true
    throw_in_finally: true
    tighten_type_of_initializing_formals: true
    type_annotate_public_apis: true
    type_init_formals: true
    type_literal_in_constant_pattern: true
    unawaited_futures: true
    unnecessary_await_in_return: true
    unnecessary_brace_in_string_interps: true
    unnecessary_breaks: true
    unnecessary_const: true
    unnecessary_constructor_name: true
    unnecessary_getters_setters: true
    unnecessary_lambdas: true
    unnecessary_late: true
    unnecessary_library_directive: true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_aware_operator_on_extension_on_nullable: true
    unnecessary_null_checks: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_nullable_for_final_variable_declarations: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    unnecessary_statements: true
    unnecessary_string_escapes: true
    unnecessary_string_interpolations: true
    unnecessary_this: true
    unnecessary_to_list_in_spreads: true
    unreachable_from_main: true
    unrelated_type_equality_checks: true
    unsafe_html: true
    use_enums: true
    use_function_type_syntax_for_parameters: true
    use_if_null_to_convert_nulls_to_bools: true
    use_is_even_rather_than_modulo: true
    use_late_for_private_fields_and_variables: true
    use_named_constants: true
    use_raw_strings: true
    use_rethrow_when_possible: true
    use_setters_to_change_properties: true
    use_string_buffers: true
    use_string_in_part_of_directives: true
    use_super_parameters: true
    use_test_throws_matchers: true
    use_to_and_as_if_applicable: true
    valid_regexps: true
    void_checks: true