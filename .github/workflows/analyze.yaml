name: analyze

on:
  pull_request:
    branches:
      - main
    paths:
      - "lib/**"
      - "test/**"
      - "example/**"
      - "pubspec.yaml"
      - ".github/workflows/analyze.yaml"

jobs:
  analysis:
    name: 🕵️ Analyze
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    timeout-minutes: 5
    steps:
      - name: 📚 Git checkout
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: 🔗 Link checker
        uses: tcort/github-action-markdown-link-check@v1.1.0
        with:
          base-branch: main
          use-quiet-mode: "yes"
          check-modified-files-only: "yes"

      - name: 🪄 Spell check
        uses: streetsidesoftware/cspell-action@v7.2.0
        with:
          config: .github/workflows/config/spell-check/cspell.json
          incremental_files_only: true
          files: "**/*.{md,dart}"

      - name: 🎯 Setup Dart
        uses: dart-lang/setup-dart@v1.7.1

      - name: 📦 Install dependencies
        run: dart pub upgrade

      - name: 🕵️ Analyze code
        uses: ValentinVignal/action-dart-analyze@v1.1
        if: ${{ github.event_name == 'pull_request' }}
        with:
          fail-on: "format"
          token: ${{ secrets.GITHUB_TOKEN }}
          format: true

      - name: 🏜️ Publish - dry run
        if: ${{ github.event_name == 'pull_request' }}
        run: dart pub publish --dry-run

      - name: 🧮 Check PANA score
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          sudo apt-get install webp
          PANA=$(dart run pana . --no-warning)
          PANA_SCORE=$(echo $PANA | sed -n "s/.*Points: \([0-9]*\)\/\([0-9]*\)./\1\/\2/p")
          echo "score: $PANA_SCORE"
          IFS='/' read -ra SCORE_ARR <<< "$PANA_SCORE"; SCORE=${SCORE_ARR[0]}
          if (( SCORE < 160 )); then echo "Minimum score of 160 was not met! Got $SCORE."; exit 1; fi
